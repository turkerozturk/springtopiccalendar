<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.turkerozturk</groupId>
  <artifactId>DailyTopicTrackerProject</artifactId>
  <version>1.0.3</version>
  <name>DailyTopicTrackerProject</name>
  <description>Daily Topic Tracker, a Java Spring Boot application with SQLite database.</description>
  <url>https://github.com/turkerozturk/springtopiccalendar</url>
  <packaging>pom</packaging>

  <modules>
    <module>dailytopictracker</module>
    <module>externaltools</module>
    <module>dttupdater</module>
  </modules>


  <properties>
    <java.version>17</java.version>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <!-- bunlar maven.compiler.release belirtildigi icin gereksiz oluyormus:
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Intellij antrun'da kullanacagimiz bu iki degiskeni tanimsiz olarak algilamasin diye,
		property olarak tanimliyoruz. Tanimlamazsak maven hatasiz calisir ama IDE'de error
		olarak gorunmesi can sikar.
	 -->


  </properties>






  <build>
    <plugins>
      <!-- TÃ¼m modulleri sirasiyla build eder -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- iki dosyayi "release" klasorune kopyala -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy file="version.json"
                      todir="release/" />
                <copy file="README.md"
                      todir="release/nonessential/" />
                <copy file="LICENSE"
                      tofile="release/nonessential/license.txt" />
              </target>
            </configuration>
          </execution>

          <!-- Bu gorevin amaci eger ignoredfolder/jrepath.txt dosyasi varsa, icindeki ilk satirdaki
		klasor yolunu jre.path degiskenine yuklemesi ve o degiskeni kullanarak klasor yolu icindeki
		tum dosya ve klasorleri release/JRE klasorune kopyalamasi. -->
          <execution>
            <id>copy-jre</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="copy-jre-if-defined">



                <!-- jrepath.txt dosyasindaki ilk satiri jre.path ozelligine oku -->
                <loadfile property="jre.path"
                          srcFile="ignoredfolder/jrepath.txt"
                          failonerror="false">
                  <filterchain>
                    <headfilter lines="1"/>
                    <striplinebreaks/>
                  </filterchain>
                </loadfile>

                <available file="${jre.path}" type="dir" property="jre.dir.exists" />

                <echo message="JRE path read: ${jre.path}" />

                <!-- klasor varsa kopyala -->

                <copy todir="release/JRE" failonerror="false">
                  <fileset dir="${jre.path}" erroronmissingdir="false"/>
                </copy>

                <echo message="JRE copy attempted from ${jre.path} (exists? ${jre.dir.exists})" />

              </target>
            </configuration>
          </execution>

          <execution>
            <id>create-topicimages-dir</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <mkdir dir="release/topicimages" />
                <mkdir dir="${project.basedir}/topicimages" />
                <mkdir dir="release/nonessential" />

              </target>
            </configuration>
          </execution>

          <!-- tum islemler bittikten sonra release klasorunun icindekilerin zip yapilmasi -->
          <execution>
            <id>package-zip</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="create-zip">
                <!-- release-zip klasorunu olustur -->
                <mkdir dir="release/nonessential" />

                <!-- release klasorunun icerigini ziple, zip dosyasini release/release-zip altina koy -->
                <zip destfile="release/nonessential/daily-topic-tracker.zip" basedir="release">
                  <!-- release klasorunun kendisi degil, sadece icerigi eklensin -->
                  <exclude name="nonessential/**" />
                </zip>
              </target>
            </configuration>
          </execution>


        </executions>
      </plugin>

    </plugins>
  </build>

</project>
